version: '3'

set: [pipefail]

tasks:
  default:
    cmds:
      - task: build

  build:
    aliases: [b]
    desc: builds WASM for browser
    run: when_changed
    vars:
      MODE: '{{default "release" .MODE}}'
      LAST_MODE:
        sh: if grep -q 'corrupt heap' lib/segmenter_utils_rs.js; then echo debug; else echo release; fi
    cmds:
      - cargo build --lib --target wasm32-unknown-unknown {{if ne .MODE "debug"}}--{{.MODE}}{{end}}
      - mkdir -p lib
      - cargo bin wasm-bindgen "../../target/wasm32-unknown-unknown/{{.MODE}}/segmenter_utils_rs.wasm" --out-dir lib --typescript --target web {{if eq .MODE "debug"}}--debug{{end}}
      - if test {{.MODE}} = release; then pnpm wasm-opt -O4 lib/segmenter_utils_rs_bg.wasm -o lib/segmenter_utils_rs_bg.wasm; else echo skipping optimizations; fi
    sources:
      - ../../Cargo.lock
      - ../../Cargo.toml
      - ../../pnpm-lock.yaml
      - ../../rust-toolchain.toml
      - Taskfile.yml
      - Cargo.toml
      - src/**/*
    generates:
      - lib/segmenter_utils_rs_bg.wasm
    status:
      - test {{.MODE}} = {{.LAST_MODE}}
